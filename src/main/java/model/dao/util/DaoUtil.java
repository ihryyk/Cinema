package model.dao.util;

import exception.DaoOperationException;
import model.dao.impl.SeatDaoImpl;
import model.entity.User;
import org.apache.log4j.Logger;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * Util methods for Dao
 *
 */
public class DaoUtil {
    private final static Logger logger = Logger.getLogger(DaoUtil.class);

    /**
     * This method allows to retrieve IDs that were generated by the database during insert statement
     *
     * @param insertStatement   - prepared statement.
     * @return generated id.
     * @throws DaoOperationException if there was an error executing the query
     *                      in the database
     * @see User
     */
    public static Long fetchGeneratedId(PreparedStatement insertStatement) throws SQLException, DaoOperationException {
        ResultSet generatedKeys = insertStatement.getGeneratedKeys();
        if (generatedKeys.next()) {
            return generatedKeys.getLong(1);
        } else {
            logger.error("Can not obtain product ID");
            throw new DaoOperationException("Can not obtain product ID");
        }
    }

    /**
     * Checks whether changes in databases have been committed
     *
     * @param preparedStatement - prepared statement
     * @throws DaoOperationException if there was an error executing the query
     *                      in the database
     */
    public static void checkRowAffected(PreparedStatement preparedStatement) throws SQLException, DaoOperationException {
        int rowsAffected = preparedStatement.executeUpdate();
        if (rowsAffected == 0){
            logger.error("No changes have occurred in the database");
            throw new DaoOperationException("No changes have occurred in the database");
        }
    }
}
